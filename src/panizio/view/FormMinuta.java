package panizio.view;

import panizio.conexao.ConexaoBanco;
import panizio.dao.DestinatarioDAO;
import panizio.dao.MinutaDAO;
import panizio.dao.Nota_FiscalDAO;
import panizio.dao.RemetenteDAO;
import panizio.model.Destinatario;
import panizio.model.Minuta;
import panizio.model.Nota_Fiscal;
import panizio.model.Remetente;
import panizio.utils.AtributosGlobais;
import panizio.utils.ManipularCampos;
import panizio.utils.TransicaoTelas;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import panizio.dao.UsuarioDAO;
import panizio.model.Usuario;

/**
 *
 * @author Lucas Panizio
 */
public class FormMinuta extends javax.swing.JFrame {

    private ConexaoBanco conex;

    public FormMinuta() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.conex = new ConexaoBanco();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formEditarCadastrar = new javax.swing.JDialog();
        btnSalvar1 = new javax.swing.JButton();
        btnCancelar2 = new javax.swing.JButton();
        Remetente1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblCNPJ = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblCEP = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCNPJ = new javax.swing.JFormattedTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        formConsultar = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMinutas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        radioDestino = new javax.swing.JRadioButton();
        radioDestinatario = new javax.swing.JRadioButton();
        radioRemetente = new javax.swing.JRadioButton();
        radioNumero = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtPesquisa1 = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        popUpConsultar = new javax.swing.JPopupMenu();
        popVisualizar = new javax.swing.JMenuItem();
        filtros = new javax.swing.ButtonGroup();
        formPesquisar = new javax.swing.JDialog();
        txtPesquisa = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblPesquisar1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRemetenteOuDestinatario = new javax.swing.JTable();
        popUpPesquisar = new javax.swing.JPopupMenu();
        popEditar = new javax.swing.JMenuItem();
        Remetente = new javax.swing.JPanel();
        lblRemetente = new javax.swing.JLabel();
        txtRemetente = new javax.swing.JTextField();
        lblCNPJ1 = new javax.swing.JLabel();
        lblEndereco1 = new javax.swing.JLabel();
        lblNumero1 = new javax.swing.JLabel();
        lblCEP1 = new javax.swing.JLabel();
        lblCidade1 = new javax.swing.JLabel();
        txtCidade1 = new javax.swing.JTextField();
        lblEstado1 = new javax.swing.JLabel();
        txtEstado1 = new javax.swing.JTextField();
        lblTelefone1 = new javax.swing.JLabel();
        btnRemetente = new javax.swing.JButton();
        txtEndereco1 = new javax.swing.JTextField();
        txtCNPJ1 = new javax.swing.JTextField();
        txtNumero1 = new javax.swing.JTextField();
        txtTelefone1 = new javax.swing.JTextField();
        txtCEP1 = new javax.swing.JTextField();
        Destinatario = new javax.swing.JPanel();
        lblTelefone2 = new javax.swing.JLabel();
        txtEndereco2 = new javax.swing.JTextField();
        lblNumero2 = new javax.swing.JLabel();
        lblCidade2 = new javax.swing.JLabel();
        lblDestinatario2 = new javax.swing.JLabel();
        txtCidade2 = new javax.swing.JTextField();
        txtDestinatario = new javax.swing.JTextField();
        lblCNPJ2 = new javax.swing.JLabel();
        lblCEP2 = new javax.swing.JLabel();
        lblEstado2 = new javax.swing.JLabel();
        txtEstado2 = new javax.swing.JTextField();
        lblEndereco2 = new javax.swing.JLabel();
        btnDestinatario = new javax.swing.JButton();
        txtCNPJ2 = new javax.swing.JTextField();
        txtNumero2 = new javax.swing.JTextField();
        txtCEP2 = new javax.swing.JTextField();
        txtTelefone2 = new javax.swing.JTextField();
        Identificação = new javax.swing.JPanel();
        lblMinuta = new javax.swing.JLabel();
        lblValorMinuta = new javax.swing.JLabel();
        lblNF = new javax.swing.JLabel();
        txtNF = new javax.swing.JTextField();
        lblValorNF = new javax.swing.JLabel();
        lblEmissao = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        lblVolumes = new javax.swing.JLabel();
        lblCubico = new javax.swing.JLabel();
        lblPeso = new javax.swing.JLabel();
        txtVolumes = new javax.swing.JTextField();
        txtEmissao = new javax.swing.JFormattedTextField();
        txtHora = new javax.swing.JFormattedTextField();
        lblHora = new javax.swing.JLabel();
        txtMinuta = new javax.swing.JTextField();
        txtValorMinuta = new javax.swing.JFormattedTextField();
        txtValorNF = new javax.swing.JFormattedTextField();
        txtPeso = new javax.swing.JFormattedTextField();
        txtCubico = new javax.swing.JFormattedTextField();
        Observação = new javax.swing.JPanel();
        lblObservacao = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        btnIncluir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JButton();
        jMenu = new javax.swing.JMenuBar();
        menuCadastros = new javax.swing.JMenu();
        subUsuarios = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        subCadastrarRemetentes = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        subCadastrarDestinatarios = new javax.swing.JMenuItem();
        menuConsulta = new javax.swing.JMenu();
        subConsultarMinutas = new javax.swing.JMenuItem();
        sucConsultarRemetentes = new javax.swing.JMenuItem();
        subConsultarDestinatarios = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenu();

        formEditarCadastrar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        formEditarCadastrar.setMinimumSize(new java.awt.Dimension(520, 323));
        formEditarCadastrar.setModal(true);
        formEditarCadastrar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/check 22x22.png"))); // NOI18N
        btnSalvar1.setText("SALVAR");
        btnSalvar1.setFocusable(false);
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });
        btnSalvar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvar1KeyPressed(evt);
            }
        });
        formEditarCadastrar.getContentPane().add(btnSalvar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 110, -1));

        btnCancelar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/cancel 22x22 (2).png"))); // NOI18N
        btnCancelar2.setText("CANCELAR");
        btnCancelar2.setFocusable(false);
        btnCancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelar2ActionPerformed(evt);
            }
        });
        formEditarCadastrar.getContentPane().add(btnCancelar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 120, -1));

        Remetente1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblNome.setText("Nome");

        txtNome.setNextFocusableComponent(txtEndereco);

        lblCNPJ.setText("CNPJ");

        lblEndereco.setText("Endereço");

        txtEndereco.setNextFocusableComponent(txtCidade);

        lblNumero.setText("Nº");

        txtNumero.setNextFocusableComponent(txtCEP);

        lblCEP.setText("CEP");

        lblCidade.setText("Cidade");

        txtCidade.setNextFocusableComponent(txtEstado);

        lblEstado.setText("Estado");

        txtEstado.setNextFocusableComponent(txtNumero);

        lblTelefone.setText("Telefone");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setNextFocusableComponent(btnSalvar1);

        try {
            txtCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCNPJ.setNextFocusableComponent(txtTelefone);

        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCEP.setNextFocusableComponent(txtCNPJ);

        javax.swing.GroupLayout Remetente1Layout = new javax.swing.GroupLayout(Remetente1);
        Remetente1.setLayout(Remetente1Layout);
        Remetente1Layout.setHorizontalGroup(
            Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Remetente1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCNPJ)
                    .addComponent(lblEndereco)
                    .addComponent(lblCidade)
                    .addComponent(lblNome)
                    .addComponent(lblNumero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEndereco)
                        .addGroup(Remetente1Layout.createSequentialGroup()
                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblEstado)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Remetente1Layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblCEP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Remetente1Layout.createSequentialGroup()
                        .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTelefone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        Remetente1Layout.setVerticalGroup(
            Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Remetente1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Remetente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        formEditarCadastrar.getContentPane().add(Remetente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 480, 210));

        formConsultar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        formConsultar.setTitle("Consultar Minutas");
        formConsultar.setMinimumSize(new java.awt.Dimension(607, 472));
        formConsultar.setModal(true);
        formConsultar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblMinutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Remetente", "Destinatário", "Nota Fiscal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMinutas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblMinutasMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tblMinutas);

        formConsultar.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 570, 280));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        filtros.add(radioDestino);
        radioDestino.setText("Nota Fiscal");
        radioDestino.setActionCommand("N.NF");
        radioDestino.setFocusable(false);

        filtros.add(radioDestinatario);
        radioDestinatario.setText("Destinatário");
        radioDestinatario.setActionCommand("D.NOME");
        radioDestinatario.setFocusable(false);
        radioDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDestinatarioActionPerformed(evt);
            }
        });

        filtros.add(radioRemetente);
        radioRemetente.setText("Rementente");
        radioRemetente.setActionCommand("R.NOME");
        radioRemetente.setFocusable(false);

        filtros.add(radioNumero);
        radioNumero.setText("Numero");
        radioNumero.setActionCommand("M.ID_MINUTA");
        radioNumero.setFocusable(false);

        jLabel1.setText("Selecione um filtro para pesquisar:");

        txtPesquisa1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisa1KeyPressed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/zoom 20x20.png"))); // NOI18N
        btnPesquisar.setText("PESQUISAR");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioNumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioRemetente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDestinatario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDestino))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar)))
                .addGap(73, 73, 73))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDestinatario)
                    .addComponent(radioRemetente)
                    .addComponent(radioNumero)
                    .addComponent(radioDestino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        formConsultar.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 570, 120));

        popVisualizar.setText("VISUALIZAR");
        popVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popVisualizarActionPerformed(evt);
            }
        });
        popUpConsultar.add(popVisualizar);

        formPesquisar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        formPesquisar.setMinimumSize(new java.awt.Dimension(625, 458));
        formPesquisar.setModal(true);
        formPesquisar.setResizable(false);
        formPesquisar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyTyped(evt);
            }
        });
        formPesquisar.getContentPane().add(txtPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 360, 30));

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/new-person 22x22.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        formPesquisar.getContentPane().add(btnNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 100, -1));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/erase.png"))); // NOI18N
        btnCancel.setText("LIMPAR");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        formPesquisar.getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        lblPesquisar1.setText(" Pesquisar  (Nome):");
        formPesquisar.getContentPane().add(lblPesquisar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        tblRemetenteOuDestinatario.setAutoCreateRowSorter(true);
        tblRemetenteOuDestinatario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CNPJ", "Endereço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRemetenteOuDestinatario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRemetenteOuDestinatarioMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblRemetenteOuDestinatarioMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblRemetenteOuDestinatario);

        formPesquisar.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 600, 330));

        popEditar.setText("EDITAR");
        popEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                popEditarMousePressed(evt);
            }
        });
        popUpPesquisar.add(popEditar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Minutas - Panizio Transportes");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Remetente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblRemetente.setText("Remetente");

        txtRemetente.setEditable(false);
        txtRemetente.setEnabled(false);
        txtRemetente.setNextFocusableComponent(txtDestinatario);
        txtRemetente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRemetenteMouseClicked(evt);
            }
        });
        txtRemetente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRemetenteKeyPressed(evt);
            }
        });

        lblCNPJ1.setText("CNPJ");

        lblEndereco1.setText("Endereço");

        lblNumero1.setText("Nº");

        lblCEP1.setText("CEP");

        lblCidade1.setText("Cidade");

        txtCidade1.setEditable(false);
        txtCidade1.setEnabled(false);
        txtCidade1.setNextFocusableComponent(txtEstado1);

        lblEstado1.setText("Estado");

        txtEstado1.setEditable(false);
        txtEstado1.setEnabled(false);
        txtEstado1.setNextFocusableComponent(txtTelefone1);

        lblTelefone1.setText("Telefone");

        btnRemetente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/zoom 20x20.png"))); // NOI18N
        btnRemetente.setBorderPainted(false);
        btnRemetente.setEnabled(false);
        btnRemetente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemetenteActionPerformed(evt);
            }
        });

        txtEndereco1.setEditable(false);
        txtEndereco1.setEnabled(false);
        txtEndereco1.setNextFocusableComponent(txtNumero2);

        txtCNPJ1.setEditable(false);
        txtCNPJ1.setEnabled(false);
        txtCNPJ1.setNextFocusableComponent(txtNumero1);

        txtNumero1.setEditable(false);
        txtNumero1.setEnabled(false);
        txtNumero1.setNextFocusableComponent(txtCEP1);

        txtTelefone1.setEditable(false);
        txtTelefone1.setEnabled(false);
        txtTelefone1.setNextFocusableComponent(txtDestinatario);

        txtCEP1.setEditable(false);
        txtCEP1.setEnabled(false);
        txtCEP1.setNextFocusableComponent(txtTelefone1);

        javax.swing.GroupLayout RemetenteLayout = new javax.swing.GroupLayout(Remetente);
        Remetente.setLayout(RemetenteLayout);
        RemetenteLayout.setHorizontalGroup(
            RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemetenteLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRemetente)
                    .addGroup(RemetenteLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEndereco1)
                            .addComponent(lblCidade1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RemetenteLayout.createSequentialGroup()
                                .addComponent(txtCidade1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblEstado1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstado1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RemetenteLayout.createSequentialGroup()
                                .addComponent(txtRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtEndereco1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(RemetenteLayout.createSequentialGroup()
                                .addComponent(lblNumero1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumero1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblCEP1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCEP1))
                            .addGroup(RemetenteLayout.createSequentialGroup()
                                .addComponent(lblCNPJ1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCNPJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RemetenteLayout.createSequentialGroup()
                                .addComponent(lblTelefone1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTelefone1)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        RemetenteLayout.setVerticalGroup(
            RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemetenteLayout.createSequentialGroup()
                .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(RemetenteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCNPJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCNPJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndereco1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumero1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCEP1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndereco1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCEP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(RemetenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEstado1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEstado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblCidade1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCidade1))
                .addContainerGap())
        );

        Destinatario.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTelefone2.setText("Telefone");

        txtEndereco2.setEditable(false);
        txtEndereco2.setEnabled(false);
        txtEndereco2.setNextFocusableComponent(txtNumero2);

        lblNumero2.setText("Nº");

        lblCidade2.setText("Cidade");

        lblDestinatario2.setText("Destinatário");

        txtCidade2.setEnabled(false);
        txtCidade2.setNextFocusableComponent(txtEstado2);

        txtDestinatario.setEditable(false);
        txtDestinatario.setEnabled(false);
        txtDestinatario.setNextFocusableComponent(txtObservacao);
        txtDestinatario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDestinatarioMouseClicked(evt);
            }
        });
        txtDestinatario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDestinatarioKeyPressed(evt);
            }
        });

        lblCNPJ2.setText("CNPJ");

        lblCEP2.setText("CEP");

        lblEstado2.setText("Estado");

        txtEstado2.setEditable(false);
        txtEstado2.setEnabled(false);
        txtEstado2.setNextFocusableComponent(txtTelefone2);

        lblEndereco2.setText("Endereço");

        btnDestinatario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/zoom 20x20.png"))); // NOI18N
        btnDestinatario.setBorderPainted(false);
        btnDestinatario.setEnabled(false);
        btnDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestinatarioActionPerformed(evt);
            }
        });

        txtCNPJ2.setEditable(false);
        txtCNPJ2.setEnabled(false);
        txtCNPJ2.setNextFocusableComponent(txtNumero2);

        txtNumero2.setEditable(false);
        txtNumero2.setEnabled(false);
        txtNumero2.setNextFocusableComponent(txtCEP2);

        txtCEP2.setEditable(false);
        txtCEP2.setEnabled(false);
        txtCEP2.setNextFocusableComponent(txtTelefone2);

        txtTelefone2.setEditable(false);
        txtTelefone2.setEnabled(false);
        txtTelefone2.setNextFocusableComponent(txtObservacao);

        javax.swing.GroupLayout DestinatarioLayout = new javax.swing.GroupLayout(Destinatario);
        Destinatario.setLayout(DestinatarioLayout);
        DestinatarioLayout.setHorizontalGroup(
            DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DestinatarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDestinatario2)
                    .addComponent(lblCidade2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEndereco2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEndereco2, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DestinatarioLayout.createSequentialGroup()
                        .addComponent(txtCidade2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEstado2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstado2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DestinatarioLayout.createSequentialGroup()
                        .addComponent(txtDestinatario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DestinatarioLayout.createSequentialGroup()
                        .addComponent(lblNumero2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCEP2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCEP2))
                    .addGroup(DestinatarioLayout.createSequentialGroup()
                        .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(DestinatarioLayout.createSequentialGroup()
                                .addComponent(lblTelefone2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTelefone2))
                            .addGroup(DestinatarioLayout.createSequentialGroup()
                                .addComponent(lblCNPJ2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCNPJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DestinatarioLayout.setVerticalGroup(
            DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DestinatarioLayout.createSequentialGroup()
                .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DestinatarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDestinatario2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCNPJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCNPJ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndereco2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndereco2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCEP2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCEP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCidade2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEstado2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEstado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCidade2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Identificação.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblMinuta.setText("Minuta Nº");

        lblValorMinuta.setText("Valor (R$)");

        lblNF.setText("Nota Fiscal");

        txtNF.setEnabled(false);
        txtNF.setNextFocusableComponent(txtValorNF);

        lblValorNF.setText("Valor (R$)");

        lblEmissao.setText("Data Emissão");

        txtUsuario.setEnabled(false);

        lblUsuario.setText("Usuário");

        lblVolumes.setText("Volumes");

        lblCubico.setText("Met.Cubicos");

        lblPeso.setText("Peso");

        txtVolumes.setEnabled(false);
        txtVolumes.setNextFocusableComponent(txtCubico);

        txtEmissao.setEditable(false);
        try {
            txtEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtEmissao.setText("");
        txtEmissao.setEnabled(false);

        txtHora.setEditable(false);
        try {
            txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHora.setEnabled(false);

        lblHora.setText("Hora");

        txtMinuta.setEnabled(false);

        txtValorMinuta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00"))));
        txtValorMinuta.setEnabled(false);
        txtValorMinuta.setNextFocusableComponent(txtRemetente);
        txtValorMinuta.setPreferredSize(new java.awt.Dimension(14, 24));

        txtValorNF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00"))));
        txtValorNF.setEnabled(false);
        txtValorNF.setNextFocusableComponent(txtPeso);
        txtValorNF.setPreferredSize(new java.awt.Dimension(14, 24));

        txtPeso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00"))));
        txtPeso.setEnabled(false);
        txtPeso.setNextFocusableComponent(txtVolumes);
        txtPeso.setPreferredSize(new java.awt.Dimension(14, 24));

        txtCubico.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.000"))));
        txtCubico.setEnabled(false);
        txtCubico.setNextFocusableComponent(txtValorMinuta);
        txtCubico.setPreferredSize(new java.awt.Dimension(14, 24));

        javax.swing.GroupLayout IdentificaçãoLayout = new javax.swing.GroupLayout(Identificação);
        Identificação.setLayout(IdentificaçãoLayout);
        IdentificaçãoLayout.setHorizontalGroup(
            IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IdentificaçãoLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IdentificaçãoLayout.createSequentialGroup()
                        .addComponent(lblNF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNF))
                    .addGroup(IdentificaçãoLayout.createSequentialGroup()
                        .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(IdentificaçãoLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(lblPeso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPeso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(IdentificaçãoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblValorNF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtValorNF, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)))
                        .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IdentificaçãoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblVolumes))
                            .addGroup(IdentificaçãoLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(lblCubico)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCubico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtVolumes, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))))
                .addGap(42, 42, 42)
                .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(IdentificaçãoLayout.createSequentialGroup()
                        .addComponent(lblEmissao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(lblHora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IdentificaçãoLayout.createSequentialGroup()
                        .addComponent(lblMinuta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMinuta, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblValorMinuta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorMinuta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(IdentificaçãoLayout.createSequentialGroup()
                        .addComponent(lblUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );
        IdentificaçãoLayout.setVerticalGroup(
            IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IdentificaçãoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNF)
                    .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVolumes, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVolumes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValorNF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHora)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmissao)
                    .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorNF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValorMinuta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(IdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCubico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPeso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblValorMinuta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMinuta)
                        .addComponent(txtMinuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPeso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCubico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
        );

        Observação.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Observação.setNextFocusableComponent(btnSalvar);

        lblObservacao.setText("Observações");

        txtObservacao.setColumns(20);
        txtObservacao.setRows(5);
        txtObservacao.setEnabled(false);
        jScrollPane2.setViewportView(txtObservacao);

        javax.swing.GroupLayout ObservaçãoLayout = new javax.swing.GroupLayout(Observação);
        Observação.setLayout(ObservaçãoLayout);
        ObservaçãoLayout.setHorizontalGroup(
            ObservaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ObservaçãoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ObservaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ObservaçãoLayout.createSequentialGroup()
                        .addComponent(lblObservacao)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        ObservaçãoLayout.setVerticalGroup(
            ObservaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ObservaçãoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblObservacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/new-document.png"))); // NOI18N
        btnIncluir.setText("INCLUIR");
        btnIncluir.setFocusPainted(false);
        btnIncluir.setNextFocusableComponent(txtNF);
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/cancel 22x22 (2).png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/check 22x22.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/logo-167x54.png"))); // NOI18N

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/print 30x30.png"))); // NOI18N
        btnImprimir.setEnabled(false);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jMenu.setBorder(null);

        menuCadastros.setText("Cadastros");

        subUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/usuario 16x16.png"))); // NOI18N
        subUsuarios.setText("Usuarios");
        subUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subUsuariosMousePressed(evt);
            }
        });
        menuCadastros.add(subUsuarios);
        menuCadastros.add(jSeparator1);

        subCadastrarRemetentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/remetente 16x16.png"))); // NOI18N
        subCadastrarRemetentes.setText("Remetentes");
        subCadastrarRemetentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subCadastrarRemetentesMousePressed(evt);
            }
        });
        menuCadastros.add(subCadastrarRemetentes);
        menuCadastros.add(jSeparator2);

        subCadastrarDestinatarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/destinatario 16x16.png"))); // NOI18N
        subCadastrarDestinatarios.setText("Destinatários");
        subCadastrarDestinatarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subCadastrarDestinatariosMousePressed(evt);
            }
        });
        menuCadastros.add(subCadastrarDestinatarios);

        jMenu.add(menuCadastros);

        menuConsulta.setText("Consulta");

        subConsultarMinutas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/minuta 16x16.png"))); // NOI18N
        subConsultarMinutas.setText("Minuta");
        subConsultarMinutas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subConsultarMinutasMousePressed(evt);
            }
        });
        menuConsulta.add(subConsultarMinutas);

        sucConsultarRemetentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/remetente 16x16.png"))); // NOI18N
        sucConsultarRemetentes.setText("Remetente");
        sucConsultarRemetentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sucConsultarRemetentesActionPerformed(evt);
            }
        });
        menuConsulta.add(sucConsultarRemetentes);

        subConsultarDestinatarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panizio/imagens/destinatario 16x16.png"))); // NOI18N
        subConsultarDestinatarios.setText("Destinatário");
        subConsultarDestinatarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subConsultarDestinatariosActionPerformed(evt);
            }
        });
        menuConsulta.add(subConsultarDestinatarios);

        jMenu.add(menuConsulta);

        menuSair.setText("Sair");
        menuSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSairMouseClicked(evt);
            }
        });
        jMenu.add(menuSair);

        setJMenuBar(jMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Remetente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Destinatario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Identificação, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Observação, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIncluir)
                        .addGap(4, 4, 4)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnImprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnIncluir)
                                .addComponent(btnCancelar)
                                .addComponent(btnSalvar))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Identificação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Remetente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Observação, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (!AtributosGlobais.usuario.getPerfil().equals("ADMINISTRADOR")) {
            subUsuarios.setEnabled(false);
        }
        AtributosGlobais.minutaAtual = new MinutaDAO().obterProximo();
        txtUsuario.setText(AtributosGlobais.usuario.getLogin());
    }//GEN-LAST:event_formWindowActivated

    private void subUsuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subUsuariosMousePressed
        TransicaoTelas.abrir(new FormUsuario());
    }//GEN-LAST:event_subUsuariosMousePressed

    private void menuSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSairMouseClicked
        TransicaoTelas.trocar(this, new FormLogin());
    }//GEN-LAST:event_menuSairMouseClicked

    private void formatarCamposMinuta() {
        ManipularCampos.formatarCampoNumericasVirgulas(txtNF, 33);
        ManipularCampos.formatarCampoNumerico(txtVolumes, 7);
    }

    private void formatarCamposPesquisa() {
        ManipularCampos.formatarCampoAlfabeto(txtCidade, 30);
        ManipularCampos.formatarCampoAlfabeto(txtEstado, 2);
        ManipularCampos.formatarCampoNumerico(txtNumero, 6);
    }


    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        if (!txtNF.getText().isEmpty()) {
            ManipularCampos.limparCampos(Arrays.asList(txtNF, txtMinuta, txtValorNF, txtValorMinuta, txtPeso, txtVolumes, txtCubico,
                    txtEmissao, txtValorNF, txtRemetente, txtCNPJ1, txtEndereco1, txtNumero1, txtTelefone1, txtCEP1, txtCidade1,
                    txtEstado1, txtDestinatario, txtCNPJ2, txtEndereco2, txtNumero2, txtTelefone2, txtCEP2, txtCidade2, txtEstado2,
                    txtObservacao, txtHora));
        }
        btnIncluir.setEnabled(false);

        ManipularCampos.habilitar_desabilitar(Arrays.asList(txtNF, txtValorNF, txtValorMinuta, txtPeso, txtVolumes,
                txtValorNF, txtRemetente, txtCNPJ1, txtEndereco1, txtNumero1, txtTelefone1, txtCEP1, txtCubico,
                txtCidade1, txtEstado1, txtDestinatario, txtCNPJ2, txtEndereco2, txtNumero2, txtTelefone2, txtCEP2,
                txtCidade2, txtEstado2, txtObservacao, btnCancelar, btnSalvar, btnRemetente, btnDestinatario), true);

        formatarCamposMinuta();

        txtNF.requestFocus();
        txtEmissao.setText(java.text.DateFormat.getDateInstance(DateFormat.SHORT).format(new Date()));
        txtHora.setText(new SimpleDateFormat("kk:mm").format(new Date()));
        txtMinuta.setText(String.valueOf(AtributosGlobais.minutaAtual));

    }//GEN-LAST:event_btnIncluirActionPerformed

    /**
     * Botão CANCELAR do FormMinuta. Limpa todos os campos e desabilita todos os
     * campos e botões, e habilita o botão incluir.
     *
     * @param evt
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        List<Component> camposLimpar = Arrays.asList(txtNF, txtMinuta, txtValorNF, txtValorMinuta, txtPeso, txtVolumes, txtCubico,
                txtEmissao, txtValorNF, txtRemetente, txtCNPJ1, txtEndereco1, txtNumero1, txtTelefone1, txtCEP1, txtCidade1,
                txtEstado1, txtDestinatario, txtCNPJ2, txtEndereco2, txtNumero2, txtTelefone2, txtCEP2, txtCidade2, txtEstado2,
                txtObservacao, txtHora);

        ManipularCampos.formatarCamposDefault(Arrays.asList(txtNF, txtVolumes, txtNumero));
        ManipularCampos.limparCampos(camposLimpar);

        btnIncluir.setEnabled(true);

        List<Component> camposDesabilitar = Arrays.asList(txtNF, txtValorNF, txtPeso, txtVolumes, txtCubico,
                txtEmissao, txtValorNF, txtRemetente, txtCNPJ1, txtEndereco1, txtNumero1, txtTelefone1, txtValorMinuta,
                txtCEP1, txtCidade1, txtEstado1, txtDestinatario, txtCNPJ2, txtEndereco2, txtNumero2, txtTelefone2,
                txtCEP2, txtCidade2, txtEstado2, txtObservacao, btnCancelar, txtHora, btnRemetente, btnDestinatario,
                btnSalvar);
        ManipularCampos.habilitar_desabilitar(camposDesabilitar, false);

        txtNF.requestFocus(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Botão SALVAR do FormMinuta (tela principal) que desencadeia uma série de
     * inserts no banco em suas respectivas tabelas.
     *
     * @param evt
     */
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        List<JTextField> campos = Arrays.asList(txtNF, txtValorNF, txtPeso, txtVolumes,
                txtEmissao, txtValorNF, txtRemetente, txtCNPJ1, txtEndereco1, txtNumero1, txtCEP1, txtCidade1,
                txtEstado1, txtDestinatario, txtCNPJ2, txtEndereco2, txtTelefone2, txtCEP2, txtCidade2, txtEstado2,
                txtHora);

        //Todos os campos obrigatórios foram preenchidos
        if (!ManipularCampos.camposVazios(campos)) {

            Nota_Fiscal nf = new Nota_Fiscal(Integer.parseInt(txtVolumes.getText()), txtCubico.getText(),
                    txtPeso.getText(), txtValorNF.getText(), txtNF.getText());
            if (new Nota_FiscalDAO().inserir(nf)) {

                Minuta min = new Minuta(txtEmissao.getText() + txtHora.getText(),txtValorNF.getText(), AtributosGlobais.usuario.getId(), AtributosGlobais.ID_DESTINATARIO,
                        AtributosGlobais.ID_REMETENTE, txtObservacao.getText(), AtributosGlobais.ID_NF);
                min.setId(Integer.parseInt(txtMinuta.getText()));

                if (new MinutaDAO().inserir(min)) {
                    btnImprimir.setEnabled(true);
                    btnIncluir.setEnabled(true);
                    ManipularCampos.habilitar_desabilitar(Arrays.asList(txtNF, txtValorNF, txtValorMinuta, txtPeso, txtVolumes,
                            txtValorNF, txtRemetente, txtCNPJ1, txtEndereco1, txtNumero1, txtTelefone1, txtCEP1, txtCubico,
                            txtCidade1, txtEstado1, txtDestinatario, txtCNPJ2, txtEndereco2, txtNumero2, txtTelefone2, txtCEP2,
                            txtCidade2, txtEstado2, txtObservacao, btnCancelar, btnSalvar, btnRemetente, btnDestinatario), false);
                    AtributosGlobais.minutaAtual = Integer.parseInt(txtMinuta.getText());
                }
            }
        } //Um ou mais campos obrigatórios não foram preenchidos
        else {
            JOptionPane.showMessageDialog(null, "Verifique se os campos foram preenchidos corretamente.", "ATENÇÃO!", JOptionPane.WARNING_MESSAGE);
            txtNF.requestFocus(true);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * Botão representado por uma lupa que executa o formPesquisar (Remetentes)
     *
     * @param evt
     */
    private void btnRemetenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemetenteActionPerformed
        AtributosGlobais.tabela = "Remetente";
        preencherTabela((DefaultTableModel) tblRemetenteOuDestinatario.getModel());
        TransicaoTelas.abrirComTitulo(formPesquisar, "Consultar " + AtributosGlobais.tabela);
    }//GEN-LAST:event_btnRemetenteActionPerformed

    /**
     * Botão representado por uma lupa que executa o formPesquisar
     * (Destinatários)
     *
     * @param evt
     */
    private void btnDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestinatarioActionPerformed
        AtributosGlobais.tabela = "Destinatario";
        preencherTabela((DefaultTableModel) tblRemetenteOuDestinatario.getModel());
        TransicaoTelas.abrirComTitulo(formPesquisar, "Consultar " + AtributosGlobais.tabela);
    }//GEN-LAST:event_btnDestinatarioActionPerformed

    /**
     * Evento de clique no subMenu para cadastro de Remetentes
     *
     * @param evt
     */
    private void subCadastrarRemetentesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subCadastrarRemetentesMousePressed
        AtributosGlobais.tabela = "Remetente";
        formatarCamposPesquisa();
        TransicaoTelas.abrirComTitulo(formEditarCadastrar, "Cadastrar " + AtributosGlobais.tabela);
    }//GEN-LAST:event_subCadastrarRemetentesMousePressed

    /**
     * Evento de clique no subMenu para cadastro de Destinatários
     *
     * @param evt
     */
    private void subCadastrarDestinatariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subCadastrarDestinatariosMousePressed
        AtributosGlobais.tabela = "Destinatario";
        formatarCamposPesquisa();
        TransicaoTelas.abrirComTitulo(formEditarCadastrar, "Cadastrar " + AtributosGlobais.tabela);
    }//GEN-LAST:event_subCadastrarDestinatariosMousePressed

    /**
     * Executa o framePesquisar (Remetentes) caso a tecla F4 seja precionada
     *
     * @param evt
     */
    private void txtRemetenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRemetenteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F4) {
            AtributosGlobais.tabela = "Remetente";
            preencherTabela((DefaultTableModel) tblRemetenteOuDestinatario.getModel());
            TransicaoTelas.abrirComTitulo(formPesquisar, "Consultar " + AtributosGlobais.tabela);
        }
    }//GEN-LAST:event_txtRemetenteKeyPressed

    /**
     * Executa o formPesquisar (Destinatários) caso a tecla F4 seja precionada
     *
     * @param evt
     */
    private void txtDestinatarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinatarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F4) {
            AtributosGlobais.tabela = "Destinatario";
            preencherTabela((DefaultTableModel) tblRemetenteOuDestinatario.getModel());
            TransicaoTelas.abrirComTitulo(formPesquisar, "Consultar " + AtributosGlobais.tabela);
        }
    }//GEN-LAST:event_txtDestinatarioKeyPressed

    /**
     * Botão SALVAR do formCadastrar (Remetentes ou Destinatários)
     *
     * @param evt
     */
    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        salvarRemetenteDestinatario();
        ManipularCampos.formatarCamposDefault(Arrays.asList(txtNumero));
        ManipularCampos.limparCampos(Arrays.asList(txtNome, txtEndereco, txtCNPJ, txtTelefone, txtCEP, txtNumero, txtCidade, txtEstado));
    }//GEN-LAST:event_btnSalvar1ActionPerformed

    private void salvarRemetenteDestinatario() {
        List<JTextField> campos = Arrays.asList(txtNome, txtCEP, txtCNPJ, txtCidade, txtEndereco, txtEstado, txtNumero);
        if (!ManipularCampos.camposVazios(campos)) {

            if (formEditarCadastrar.getTitle().equals("Cadastrar Remetente")) {
                Remetente rem = new Remetente(txtEndereco.getText(), Integer.parseInt(txtNumero.getText()),
                        txtNome.getText(), txtCNPJ.getText(), txtCidade.getText(), txtEstado.getText(), txtTelefone.getText(),
                        txtCEP.getText());
                rem.setId(AtributosGlobais.ID_REMETENTE);
                if (!new RemetenteDAO().inserir(rem)) {
                    JOptionPane.showMessageDialog(null, "12 - Não foi possível cadastrar o remetente.", "ERRO", JOptionPane.ERROR_MESSAGE);
                }

            } else if (formEditarCadastrar.getTitle().equals("Cadastrar Destinatario")) {
                Destinatario dest = new Destinatario(txtEndereco.getText(), Integer.parseInt(txtNumero.getText()),
                        txtNome.getText(), txtCNPJ.getText(), txtCidade.getText(), txtEstado.getText(), txtTelefone.getText(), txtCEP.getText());
                dest.setId(AtributosGlobais.ID_DESTINATARIO);
                if (!new DestinatarioDAO().inserir(dest)) {
                    JOptionPane.showMessageDialog(null, "13 - Não foi possível cadastrar o destinatário.", "ERRO", JOptionPane.ERROR_MESSAGE);
                }

            } else if (formEditarCadastrar.getTitle().equals("Editar Remetente")) {
                Remetente rem = new Remetente(txtEndereco.getText(), Integer.parseInt(txtNumero.getText()),
                        txtNome.getText(), txtCNPJ.getText(), txtCidade.getText(), txtEstado.getText(), txtTelefone.getText(),
                        txtCEP.getText());
                rem.setId(AtributosGlobais.ID_REMETENTE);
                if (!new RemetenteDAO().alterar(rem)) {
                    JOptionPane.showMessageDialog(null, "14 - Não foi possível alterar o remetente.", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else if (formEditarCadastrar.getTitle().equals("Editar Destinatario")) {
                Destinatario dest = new Destinatario(txtEndereco.getText(), Integer.parseInt(txtNumero.getText()),
                        txtNome.getText(), txtCNPJ.getText(), txtCidade.getText(), txtEstado.getText(), txtTelefone.getText(), txtCEP.getText());
                dest.setId(AtributosGlobais.ID_DESTINATARIO);
                if (!new DestinatarioDAO().alterar(dest)) {
                    JOptionPane.showMessageDialog(null, "15 - Não foi possível alterar o destinatário.", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
            preencherTabela((DefaultTableModel) tblRemetenteOuDestinatario.getModel());
            formEditarCadastrar.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Verifique se os campos foram preenchidos corretamente.", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtNome.requestFocus(true);
        }
    }

    /**
     * Botão CANCELAR do formCadastrar (Remententes ou Destinatários)
     *
     * @param evt
     */
    private void btnCancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelar2ActionPerformed
        List<Component> camposLimpar = Arrays.asList(txtNome, txtEndereco, txtCidade, txtEstado, txtNumero, txtTelefone, txtCEP, txtCNPJ);
        
        ManipularCampos.limparCampos(camposLimpar);     
        formatarCamposPesquisa();    
        txtNome.requestFocus();
    }//GEN-LAST:event_btnCancelar2ActionPerformed

    /**
     * Botão CANCELAR do formConsultar (Minutas)
     *
     * @param evt
     */
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        if (!txtPesquisa1.getText().isEmpty()) {
            if (filtros.getSelection() != null) {
                Object filtro = filtros.getSelection().getActionCommand();

                if (filtros.getSelection() == radioNumero) {
                    filtro = Integer.parseInt(filtros.getSelection().getActionCommand());
                }                
                
                String sql = "SELECT M.ID_MINUTA, R.NOME, D.NOME, N.NF "
                           + "FROM MINUTA M, REMETENTE R, DESTINATARIO D, NOTA_FISCAL N "
                           + "WHERE M.ID_NF = N.ID_NF AND M.ID_REMETENTE = R.ID_REMETENTE AND "
                           + "M.ID_DESTINATARIO = D.ID_DESTINATARIO AND " + filtro + " LIKE '" 
                           + txtPesquisa1.getText().toUpperCase() + "%' ORDER BY 1 DESC";

                preencherTabela((DefaultTableModel) tblMinutas.getModel(), sql);
            }
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * Botão NOVO no formCadastrar
     *
     * @param evt
     */
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        formatarCamposPesquisa();
        TransicaoTelas.abrirComTitulo(formEditarCadastrar, "Cadastrar " + AtributosGlobais.tabela);
        txtNome.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    /**
     * Botão CANCELAR do formPesquisar (Remetentes ou Destinatários).
     *
     * @param evt
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        preencherTabela((DefaultTableModel) tblRemetenteOuDestinatario.getModel());
        txtPesquisa.setText(null);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void popVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popVisualizarActionPerformed
        int id_minuta = (int) tblMinutas.getValueAt(tblMinutas.getSelectedRow(), 0);
        
        Minuta minuta = new MinutaDAO().obterMinuta(id_minuta);
        Remetente remetente = new RemetenteDAO().obterRemetente(minuta.getId_remetente());
        Destinatario destinatario = new DestinatarioDAO().obterDestinatario(minuta.getId_destinatario());
        Nota_Fiscal nf = new Nota_FiscalDAO().obterNotaFiscal(minuta.getId_nf());
        Usuario usuario = new UsuarioDAO().obterUsuario(minuta.getId_usuario());
        
        Map<String, Object> parametrosRelatorio = new HashMap<>();
        //PRIMEIRO PAINEL - DADOS NOTA E MINUTA
        //variavel ireport, campo java
        parametrosRelatorio.put("notas", nf.getNf());
        parametrosRelatorio.put("nf_valor", nf.getValor());
        parametrosRelatorio.put("peso", nf.getPeso());
        parametrosRelatorio.put("vol", nf.getQtdVolumes());
        
        parametrosRelatorio.put("cub", nf.getMetCubicos());
        parametrosRelatorio.put("nome_usuario", usuario.getLogin());
        parametrosRelatorio.put("id_minuta", minuta.getId());
        System.out.println(minuta.getId());
        parametrosRelatorio.put("emissao", minuta.getEmissao());
        System.out.println(minuta.getEmissao());
        parametrosRelatorio.put("minuta_valor", minuta.getValor());

        //SEGUNDO PAINEL - DADOS DO REMETENTE
        parametrosRelatorio.put("rem_razao", remetente.getNome());
        parametrosRelatorio.put("rem_endereco", remetente.getEndereco());
        parametrosRelatorio.put("rem_cep", remetente.getCep());
        parametrosRelatorio.put("rem_telefone", remetente.getTelefone().isEmpty() ? " " : remetente.getTelefone());
        parametrosRelatorio.put("rem_cnpj", remetente.getCnpj());
        parametrosRelatorio.put("rem_cidade", remetente.getCidade());
        parametrosRelatorio.put("rem_estado", remetente.getEstado());
        parametrosRelatorio.put("rem_numero", remetente.getNumero());

        //TERCEIRO PAINEL - DADOS DO DESTINATARIO
        parametrosRelatorio.put("dest_razao", destinatario.getNome());
        parametrosRelatorio.put("dest_endereco", destinatario.getEndereco());
        parametrosRelatorio.put("dest_cep", destinatario.getCep());
        parametrosRelatorio.put("dest_telefone", destinatario.getTelefone().isEmpty() ? " " : destinatario.getTelefone());
        parametrosRelatorio.put("dest_cnpj", destinatario.getCnpj());
        parametrosRelatorio.put("dest_cidade", destinatario.getCidade());
        parametrosRelatorio.put("dest_estado", destinatario.getEstado());
        parametrosRelatorio.put("dest_numero", destinatario.getNumero());

        //QUARTO PAINEL - OBSERVAÇÃO
        parametrosRelatorio.put("obs", minuta.getObs().isEmpty() ? " " : minuta.getObs());        
        
        formConsultar.dispose();
        imprimirMinuta(parametrosRelatorio, (int) parametrosRelatorio.get("id_minuta"));
    }//GEN-LAST:event_popVisualizarActionPerformed

    /**
     * Apresenta um menu PopUp no ponto X e Y onde o mouse foi clicado sobre a
     * tabela de Minutas.
     *
     * @param evt
     */
    private void tblMinutasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMinutasMouseReleased
        if (tblMinutas.getSelectedRow() != -1) {
            if (evt.isPopupTrigger()) {
                popUpConsultar.show(tblMinutas, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tblMinutasMouseReleased

    /**
     * Importa dados de remetente ou destinatário quando determinada linha da
     * tabela for clicada duas vezes.
     *
     * @param evt
     */
    private void tblRemetenteOuDestinatarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRemetenteOuDestinatarioMouseClicked
        if (!btnIncluir.isEnabled()) {
            if (evt.getClickCount() == 2) {
                if (formPesquisar.getTitle().equals("Consultar Remetente")) {
                    AtributosGlobais.ID_REMETENTE = (int) tblRemetenteOuDestinatario.getValueAt(tblRemetenteOuDestinatario.getSelectedRow(), 0);
                    setPesquisa(AtributosGlobais.ID_REMETENTE);
                } else {
                    AtributosGlobais.ID_DESTINATARIO = (int) tblRemetenteOuDestinatario.getValueAt(tblRemetenteOuDestinatario.getSelectedRow(), 0);
                    setPesquisa(AtributosGlobais.ID_DESTINATARIO);
                }
                txtPesquisa.setText(null);
                formPesquisar.dispose();
            }
        }
    }//GEN-LAST:event_tblRemetenteOuDestinatarioMouseClicked

    /**
     * Apresentação de informativo para o usuário quanto ao preenchimento dos
     * campos do remetente. Somente permitido por seleção na tabela, não se pode
     * preencher digitando.
     *
     * @param evt
     */
    private void txtRemetenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRemetenteMouseClicked
        if (evt.getClickCount() == 2) {
            JOptionPane.showMessageDialog(null, "Para preencher os dados do remetente você deve precionar" + '\n'
                    + "o atalho F4 ou clicar sobre o icone da lupa e selecionar o desejado.", "INFORMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
            txtRemetente.requestFocus();
        }
    }//GEN-LAST:event_txtRemetenteMouseClicked

    /**
     * Apresentação de informativo para o usuário quanto ao preenchimento dos
     * campos do destinatário. Somente permitido por seleção na tabela, não se
     * pode preencher digitando.
     *
     * @param evt
     */
    private void txtDestinatarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDestinatarioMouseClicked
        if (evt.getClickCount() == 2) {
            JOptionPane.showMessageDialog(null, "Para preencher os dados do destinatário você deve precionar" + '\n'
                    + "o atalho F4 ou clicar sobre o icone da lupa e selecionar o desejado.", "INFORMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
            txtDestinatario.requestFocus();
        }
    }//GEN-LAST:event_txtDestinatarioMouseClicked

    /**
     * Apresenta um menu PopUp no ponto X e Y onde o mouse foi clicado sobre a
     * tabela de Remetentes ou Destinatários.
     *
     * @param evt
     */
    private void tblRemetenteOuDestinatarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRemetenteOuDestinatarioMouseReleased
        if (tblRemetenteOuDestinatario.getSelectedRow() != -1) {
            if (evt.isPopupTrigger()) {
                popUpPesquisar.show(tblRemetenteOuDestinatario, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tblRemetenteOuDestinatarioMouseReleased


    private void popEditarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popEditarMousePressed
        if (formPesquisar.getTitle().equals("Consultar Remetente")) {
            AtributosGlobais.ID_REMETENTE = (int) tblRemetenteOuDestinatario.getValueAt(tblRemetenteOuDestinatario.getSelectedRow(), 0);
            Remetente rem = new RemetenteDAO().obterRemetente(AtributosGlobais.ID_REMETENTE);
            txtEndereco.setText(rem.getEndereco());
            txtNumero.setText(String.valueOf(rem.getNumero()));
            txtNome.setText(rem.getNome());
            txtCNPJ.setText(rem.getCnpj());
            txtCidade.setText(rem.getCidade());
            txtEstado.setText(rem.getEstado());
            txtTelefone.setText(rem.getTelefone());
            txtCEP.setText(rem.getCep());
        } else if (formPesquisar.getTitle().equals("Consultar Destinatario")) {
            AtributosGlobais.ID_DESTINATARIO = (int) tblRemetenteOuDestinatario.getValueAt(tblRemetenteOuDestinatario.getSelectedRow(), 0);
            Destinatario dest = new DestinatarioDAO().obterDestinatario(AtributosGlobais.ID_DESTINATARIO);
            txtEndereco.setText(dest.getEndereco());
            txtNumero.setText(String.valueOf(dest.getNumero()));
            txtNome.setText(dest.getNome());
            txtCNPJ.setText(dest.getCnpj());
            txtCidade.setText(dest.getCidade());
            txtEstado.setText(dest.getEstado());
            txtTelefone.setText(dest.getTelefone());
            txtCEP.setText(dest.getCep());
        }
        TransicaoTelas.abrirComTitulo(formEditarCadastrar, "Editar " + AtributosGlobais.tabela);
    }//GEN-LAST:event_popEditarMousePressed

    private void txtPesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyTyped
        String sql = "SELECT ID_" + AtributosGlobais.tabela + ", NOME, CNPJ, ENDERECO FROM "
                + AtributosGlobais.tabela + " WHERE NOME LIKE '" + txtPesquisa.getText().toUpperCase() + "%' ORDER BY 1 DESC";
        this.conex.connect();

        try {
            PreparedStatement pst = this.conex.c.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tblRemetenteOuDestinatario.getModel();

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }

            tblRemetenteOuDestinatario.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblRemetenteOuDestinatario.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblRemetenteOuDestinatario.getColumnModel().getColumn(2).setPreferredWidth(80);
            tblRemetenteOuDestinatario.getColumnModel().getColumn(3).setPreferredWidth(180);
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            this.conex.disconnect();
        }
    }//GEN-LAST:event_txtPesquisaKeyTyped

    private void txtPesquisa1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisa1KeyPressed
        if (!txtPesquisa1.getText().isEmpty() && filtros.getSelection() == null) {
            List<Integer> teclasPermitidas = Arrays.asList(KeyEvent.VK_DELETE, KeyEvent.VK_BACK_SPACE, KeyEvent.VK_LEFT, KeyEvent.VK_RIGHT);
            if (!teclasPermitidas.contains(evt.getKeyCode())) {
                JOptionPane.showMessageDialog(null, "Selecione um filtro! ", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            }
        } else if (txtPesquisa1.getText().length() == 1) {
            preencherTabela((DefaultTableModel) tblMinutas.getModel(), null);
        }
    }//GEN-LAST:event_txtPesquisa1KeyPressed

    private void btnSalvar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvar1KeyPressed
        salvarRemetenteDestinatario();
    }//GEN-LAST:event_btnSalvar1KeyPressed

    private void subConsultarMinutasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subConsultarMinutasMousePressed
        preencherTabela((DefaultTableModel) tblMinutas.getModel(), null);
        TransicaoTelas.abrir(formConsultar);
    }//GEN-LAST:event_subConsultarMinutasMousePressed

    private void subConsultarDestinatariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subConsultarDestinatariosActionPerformed
        btnDestinatarioActionPerformed(evt);
    }//GEN-LAST:event_subConsultarDestinatariosActionPerformed

    private void sucConsultarRemetentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sucConsultarRemetentesActionPerformed
        btnRemetenteActionPerformed(evt);
    }//GEN-LAST:event_sucConsultarRemetentesActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Map<String, Object> parametrosRelatorio = new HashMap<>();
        //PRIMEIRO PAINEL - DADOS NOTA E MINUTA
        //variavel ireport, campo java
        parametrosRelatorio.put("notas", txtNF.getText());
        parametrosRelatorio.put("nf_valor", txtValorNF.getText());
        parametrosRelatorio.put("peso", txtPeso.getText());
        parametrosRelatorio.put("vol", Integer.parseInt( txtVolumes.getText() ));
        parametrosRelatorio.put("cub", txtCubico.getText());
        parametrosRelatorio.put("nome_usuario", txtUsuario.getText());
        parametrosRelatorio.put("id_minuta", Integer.parseInt( txtMinuta.getText() ));        
        parametrosRelatorio.put("emissao", txtEmissao.getText() + " " + txtHora.getText());
        parametrosRelatorio.put("minuta_valor", txtValorMinuta.getText());

        //SEGUNDO PAINEL - DADOS DO REMETENTE
        parametrosRelatorio.put("rem_razao", txtRemetente.getText());
        parametrosRelatorio.put("rem_endereco", txtEndereco1.getText());
        parametrosRelatorio.put("rem_cep", txtCEP1.getText());
        parametrosRelatorio.put("rem_telefone", txtTelefone1.getText().isEmpty() ? " " : txtTelefone1.getText());
        parametrosRelatorio.put("rem_cnpj", txtCNPJ1.getText());
        parametrosRelatorio.put("rem_cidade", txtCidade1.getText());
        parametrosRelatorio.put("rem_estado", txtEstado1.getText());
        parametrosRelatorio.put("rem_numero", txtNumero1.getText());

        //TERCEIRO PAINEL - DADOS DO DESTINATARIO
        parametrosRelatorio.put("dest_razao", txtDestinatario.getText());
        parametrosRelatorio.put("dest_endereco", txtEndereco2.getText());
        parametrosRelatorio.put("dest_cep", txtCEP2.getText());
        parametrosRelatorio.put("dest_telefone", txtTelefone2.getText().isEmpty() ? " " : txtTelefone2.getText());
        parametrosRelatorio.put("dest_cnpj", txtCNPJ2.getText());
        parametrosRelatorio.put("dest_cidade", txtCidade2.getText());
        parametrosRelatorio.put("dest_estado", txtEstado2.getText());
        parametrosRelatorio.put("dest_numero", txtNumero2.getText());

        //QUARTO PAINEL - OBSERVAÇÃO
        parametrosRelatorio.put("obs", txtObservacao.getText().isEmpty() ? " " : txtObservacao.getText());
        
        imprimirMinuta(parametrosRelatorio, Integer.parseInt( txtMinuta.getText() ));
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void txtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyPressed
        //ATALHO PARA CADASTRO DE REMTENTES OU DESTINATARIOS NA TELA DE PESQUISA
        if (evt.getKeyCode() == KeyEvent.VK_F4) {
            formatarCamposPesquisa();
            TransicaoTelas.abrirComTitulo(formEditarCadastrar, "Cadastrar " + AtributosGlobais.tabela);
        }
    }//GEN-LAST:event_txtPesquisaKeyPressed

    private void radioDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDestinatarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioDestinatarioActionPerformed

    /**
     * Imprime a minuta atual, recém feita ainda em cache.
     */
    private void imprimirMinuta(Map<String, Object> parametrosRelatorio, int id_minuta) {        

        if (this.conex.connect()) {
            try {                                                 //\\SoftPan\\ireport\\doc-minuta.jasper
                JasperPrint print = JasperFillManager.fillReport("\\SoftPan\\ireport\\doc-minuta.jasper", parametrosRelatorio, this.conex.getConnection());
                JasperViewer jv = new JasperViewer(print, false);
                jv.setVisible(true);                
                jv.setTitle("Visualização da Minuta "+id_minuta);
                jv.requestFocus();
                //JasperViewer.viewReport(print, false);
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "Não foi possível apresentar o documento.", "ERRO", JOptionPane.ERROR_MESSAGE);

            }
        }
        
    }

    /**
     * Consulta no banco de dados determinado remetente ou destinatário pela id
     * e seta nos respectivos campos do FormMinuta.
     *
     * @param id
     */
    public void setPesquisa(int id) {
        this.conex.connect();
        String sql = "SELECT ENDERECO, NUMERO, NOME, CNPJ, CIDADE, ESTADO, TELEFONE, CEP "
                + "FROM " + AtributosGlobais.tabela + " WHERE ID_" + AtributosGlobais.tabela + " = ?";

        try {
            PreparedStatement pst = this.conex.c.prepareStatement(sql);
            pst.setInt(1, id);

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                if (AtributosGlobais.tabela.equals("Remetente")) {
                    txtEndereco1.setText(rs.getString(1));
                    txtNumero1.setText(String.valueOf(rs.getInt(2)));
                    txtRemetente.setText(rs.getString(3));
                    txtCNPJ1.setText(rs.getString(4));
                    txtCidade1.setText(rs.getString(5));
                    txtEstado1.setText(rs.getString(6));
                    txtTelefone1.setText(rs.getString(7));
                    txtCEP1.setText(String.valueOf(rs.getString(8)));
                } else {
                    txtEndereco2.setText(rs.getString(1));
                    txtNumero2.setText(String.valueOf(rs.getInt(2)));
                    txtDestinatario.setText(rs.getString(3));
                    txtCNPJ2.setText(rs.getString(4));
                    txtCidade2.setText(rs.getString(5));
                    txtEstado2.setText(rs.getString(6));
                    txtTelefone2.setText(rs.getString(7));
                    txtCEP2.setText(String.valueOf(rs.getString(8)));
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao resgatar " + AtributosGlobais.tabela.toLowerCase() + ": \n" + ex, "ERRO", JOptionPane.ERROR_MESSAGE);
        } finally {
            this.conex.disconnect();
        }
    }

    /**
     * Método para preencher a tabela do formPesquisar (Remententes ou
     * Destinatários)
     *
     * @param modelo
     * @param tabela
     */
    private void preencherTabela(DefaultTableModel modelo) {
        String sql = "SELECT ID_" + AtributosGlobais.tabela + ", NOME, CNPJ, ENDERECO FROM "
                + AtributosGlobais.tabela + " ORDER BY 1 DESC";
        this.conex.connect();

        try {
            PreparedStatement pst = this.conex.c.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = modelo;

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }

            tblRemetenteOuDestinatario.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblRemetenteOuDestinatario.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblRemetenteOuDestinatario.getColumnModel().getColumn(2).setPreferredWidth(80);
            tblRemetenteOuDestinatario.getColumnModel().getColumn(3).setPreferredWidth(180);
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            this.conex.disconnect();
        }
    }

    /**
     * Método preenche a tabela do formConsultar (Minutas)
     *
     * @param modelo
     */
    private void preencherTabela(DefaultTableModel modelo, String sql) {
        if (sql == null) {
            sql = "SELECT M.ID_MINUTA, R.NOME, D.NOME, N.NF "
                + "FROM MINUTA M, NOTA_FISCAL N, REMETENTE R, DESTINATARIO D "
                + "WHERE M.ID_NF = N.ID_NF AND "
                + "M.ID_REMETENTE = R.ID_REMETENTE AND "
                + "M.ID_DESTINATARIO = D.ID_DESTINATARIO "
                + "ORDER BY 1 DESC";
        }

        this.conex.connect();

        try {
            PreparedStatement pst = this.conex.c.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = modelo;

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            this.conex.disconnect();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMinuta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMinuta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMinuta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMinuta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMinuta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Destinatario;
    private javax.swing.JPanel Identificação;
    private javax.swing.JPanel Observação;
    private javax.swing.JPanel Remetente;
    private javax.swing.JPanel Remetente1;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelar2;
    private javax.swing.JButton btnDestinatario;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemetente;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.ButtonGroup filtros;
    private javax.swing.JDialog formConsultar;
    private javax.swing.JDialog formEditarCadastrar;
    private javax.swing.JDialog formPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCEP1;
    private javax.swing.JLabel lblCEP2;
    private javax.swing.JLabel lblCNPJ;
    private javax.swing.JLabel lblCNPJ1;
    private javax.swing.JLabel lblCNPJ2;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblCidade1;
    private javax.swing.JLabel lblCidade2;
    private javax.swing.JLabel lblCubico;
    private javax.swing.JLabel lblDestinatario2;
    private javax.swing.JLabel lblEmissao;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEndereco1;
    private javax.swing.JLabel lblEndereco2;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstado1;
    private javax.swing.JLabel lblEstado2;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMinuta;
    private javax.swing.JLabel lblNF;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblNumero1;
    private javax.swing.JLabel lblNumero2;
    private javax.swing.JLabel lblObservacao;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JLabel lblPesquisar1;
    private javax.swing.JLabel lblRemetente;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblTelefone1;
    private javax.swing.JLabel lblTelefone2;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JLabel lblValorMinuta;
    private javax.swing.JLabel lblValorNF;
    private javax.swing.JLabel lblVolumes;
    private javax.swing.JMenu menuCadastros;
    private javax.swing.JMenu menuConsulta;
    private javax.swing.JMenu menuSair;
    private javax.swing.JMenuItem popEditar;
    private javax.swing.JPopupMenu popUpConsultar;
    private javax.swing.JPopupMenu popUpPesquisar;
    private javax.swing.JMenuItem popVisualizar;
    private javax.swing.JRadioButton radioDestinatario;
    private javax.swing.JRadioButton radioDestino;
    private javax.swing.JRadioButton radioNumero;
    private javax.swing.JRadioButton radioRemetente;
    private javax.swing.JMenuItem subCadastrarDestinatarios;
    private javax.swing.JMenuItem subCadastrarRemetentes;
    private javax.swing.JMenuItem subConsultarDestinatarios;
    private javax.swing.JMenuItem subConsultarMinutas;
    private javax.swing.JMenuItem subUsuarios;
    private javax.swing.JMenuItem sucConsultarRemetentes;
    private javax.swing.JTable tblMinutas;
    private javax.swing.JTable tblRemetenteOuDestinatario;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JTextField txtCEP1;
    private javax.swing.JTextField txtCEP2;
    private javax.swing.JFormattedTextField txtCNPJ;
    private javax.swing.JTextField txtCNPJ1;
    private javax.swing.JTextField txtCNPJ2;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtCidade1;
    private javax.swing.JTextField txtCidade2;
    private javax.swing.JFormattedTextField txtCubico;
    private javax.swing.JTextField txtDestinatario;
    private javax.swing.JFormattedTextField txtEmissao;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtEndereco1;
    private javax.swing.JTextField txtEndereco2;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtEstado1;
    private javax.swing.JTextField txtEstado2;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextField txtMinuta;
    private javax.swing.JTextField txtNF;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtNumero1;
    private javax.swing.JTextField txtNumero2;
    private javax.swing.JTextArea txtObservacao;
    private javax.swing.JFormattedTextField txtPeso;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtPesquisa1;
    private javax.swing.JTextField txtRemetente;
    private javax.swing.JFormattedTextField txtTelefone;
    private javax.swing.JTextField txtTelefone1;
    private javax.swing.JTextField txtTelefone2;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JFormattedTextField txtValorMinuta;
    private javax.swing.JFormattedTextField txtValorNF;
    private javax.swing.JTextField txtVolumes;
    // End of variables declaration//GEN-END:variables

}
